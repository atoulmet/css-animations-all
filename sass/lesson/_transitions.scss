$trans: (
    translateX: "translateX(150%)",
    translateY: "translateY(-50%)",
    translate: "translate(150%, -50%)",
    translateZ: "perspective(150px) translateZ(60px)",
    translate3d: "perspective(150px) translate3d(150%, -10%, 50px)",
);


$scale: (
    scaleX: "scaleX(2)",
    scaleY: "scaleY(.5)",
    scale: "scale(2, .5)",
);

$rot: (
    px150: "perspective(150px) rotateX(45deg)",
    px75: "perspective(75px) rotateX(45deg)",
    px300: "perspective(300px) rotateX(45deg)",

);

$skew: (
    skewX: "skewX(35deg)",
    skewY: "skewY(35deg)",
    skew: "skew(35deg, 35deg)",
);

@mixin anim($key) {
    animation: $key 1s alternate infinite cubic-bezier(.64,.02,.17,.99);
}

.cat {
    border-radius: 2rem;
    width: 75%;
    display: flex;
    justify-content: space-around;
    position: relative;
    margin-bottom: 3rem;
    &__label {
        position: absolute;
        top: 100%;
        left: 10%;
        font-size: 1.5rem
    }
}

.shape {
    margin: 1rem;
    font-size: 1.25rem;
    line-height: 2rem;
    >div[class*="shape__"] {
        width: 10rem;
        height: 10rem;
        margin: .5rem auto;
        background: #15dea5;
    }
    &__box {
        &--org-left {
            transform-origin: left 50%;
            @include anim(transScale);
        }
        &--org-right {
            transform-origin: right 50%;
            @include anim(transScale);
        }
        &--org-top {
            transform-origin: center top;
            @include anim(transScale);
        }
        &--org-bot {
            transform-origin: center bottom;
            @include anim(transScale);
        }
        &--org-ctr {
            transform-origin: center center;
            @include anim(transScale);
        }
    }

}

@each $key, $val in $rot {
    @keyframes #{$key} {
        0% {
            transform: #{$key}#{"(0)"};
        }
        100% {
            transform: unquote($val);
        }
    }
}

@keyframes transScale {
    0% {
        transform: scale(0);
    }
    100% {
        transform: scale(1);
    }
}


